[{"C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\index.js":"1","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\App.js":"2","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\components\\Navbar.js":"4","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\RegisterScreen.js":"5","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\ProfileScreen.js":"6","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\LoginScreen.js":"7","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\Bookingscreen.js":"8","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\Homescreen.js":"9","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\AdminScreen.js":"10","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\LandingScreen.js":"11","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\components\\Error.js":"12","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\components\\Loader.js":"13","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\components\\Success.js":"14","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\MyBookingScreen.js":"15","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\components\\Room.js":"16","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\AdminBookingScreen.js":"17","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\AdminUserScreen.js":"18","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\AdminAddRoomScreen.js":"19","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\AdminRoomScreen.js":"20"},{"size":517,"mtime":1691589939204,"results":"21","hashOfConfig":"22"},{"size":1279,"mtime":1691589939202,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1691589939204,"results":"24","hashOfConfig":"22"},{"size":2291,"mtime":1691589939203,"results":"25","hashOfConfig":"22"},{"size":3038,"mtime":1691589939208,"results":"26","hashOfConfig":"22"},{"size":1344,"mtime":1691589939207,"results":"27","hashOfConfig":"22"},{"size":2112,"mtime":1691589939207,"results":"28","hashOfConfig":"22"},{"size":4439,"mtime":1691591516305,"results":"29","hashOfConfig":"22"},{"size":4817,"mtime":1691589939207,"results":"30","hashOfConfig":"22"},{"size":1259,"mtime":1691589939206,"results":"31","hashOfConfig":"22"},{"size":786,"mtime":1691589939207,"results":"32","hashOfConfig":"22"},{"size":252,"mtime":1691589939203,"results":"33","hashOfConfig":"22"},{"size":465,"mtime":1691589939203,"results":"34","hashOfConfig":"22"},{"size":217,"mtime":1691589939204,"results":"35","hashOfConfig":"22"},{"size":3340,"mtime":1691589939207,"results":"36","hashOfConfig":"22"},{"size":2011,"mtime":1691589939203,"results":"37","hashOfConfig":"22"},{"size":1796,"mtime":1691589939206,"results":"38","hashOfConfig":"22"},{"size":1602,"mtime":1691589939206,"results":"39","hashOfConfig":"22"},{"size":4640,"mtime":1691589939204,"results":"40","hashOfConfig":"22"},{"size":1749,"mtime":1691589939206,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12zj43o",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},"C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\index.js",[],"C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\App.js",["98","99"],"import { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Homescreen from \"./screens/Homescreen\";\r\nimport Bookingscreen from \"./screens/Bookingscreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport AdminScreen from \"./screens/AdminScreen\";\r\nimport LandingScreen from \"./screens/LandingScreen\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <BrowserRouter>\r\n        <Route path=\"/\" exact component={LandingScreen} />\r\n        <Route path=\"/home\" exact component={Homescreen} />\r\n        <Route\r\n          path=\"/book/:roomid/:fromdate/:todate\"\r\n          exact\r\n          component={Bookingscreen}\r\n        />\r\n        <Route path=\"/register\" exact component={RegisterScreen} />\r\n        <Route path=\"/login\" exact component={LoginScreen} />\r\n        <Route path=\"/profile\" exact component={ProfileScreen} />\r\n        <Route path=\"/bookings\" exact component={ProfileScreen} />\r\n        <Route path=\"/admin\" exact component={AdminScreen} />\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\components\\Navbar.js",["100"],"import React from \"react\";\r\n\r\nfunction Navbar() {\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  function Logout() {\r\n    localStorage.removeItem(\"currentUser\");\r\n    window.location.href = \"/login\";\r\n  }\r\n\r\n  const navAction = () => {\r\n    if (user) {\r\n      return (\r\n        <ul className=\"navbar-nav mr-5\">\r\n          <div className=\"dropdown\">\r\n            <button\r\n              className=\"btn btn-secondary dropdown-toggle\"\r\n              type=\"button\"\r\n              id=\"dropdownMenuButton\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i class=\"fas fa-user mr-2\"></i>\r\n              {user.name}\r\n            </button>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n              <a className=\"dropdown-item\" href=\"/profile\">\r\n                Profile\r\n              </a>\r\n\r\n              <a className=\"dropdown-item\" href=\"#\" onClick={Logout}>\r\n                Logout\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item active\">\r\n          <a className=\"nav-link\" href=\"/register\">\r\n            Register\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/login\">\r\n            Login\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg\">\r\n        <a className=\"navbar-brand\" href=\"/home\">\r\n          MERN HOTEL BOOKING\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\">\r\n            <i class=\"fas fa-bars\" style={{ color: \"white\" }}></i>\r\n          </span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          {navAction()}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\RegisterScreen.js",["101"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\nimport Success from \"../components/Success\";\r\n\r\nfunction RegisterScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [cpassword, setCpassword] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  async function register() {\r\n    if (password === cpassword) {\r\n      const user = {\r\n        name,\r\n        email,\r\n        password,\r\n        cpassword,\r\n      };\r\n      //console.log(user);\r\n      setLoading(true);\r\n      setError(\"\");\r\n      setSuccess(\"\");\r\n      try {\r\n        const result = (await axios.post(\"/api/users/register\", user)).data;\r\n        console.log(result);\r\n        setSuccess(result);\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setCpassword(\"\");\r\n      } catch (error) {\r\n        console.log(error);\r\n        setError(error);\r\n      }\r\n      setLoading(false);\r\n    } else {\r\n      alert(\"Password not matched\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading && <Loader></Loader>}\r\n      {error.length > 0 && <Error msg={error}></Error>}\r\n\r\n      <div className=\"row justify-content-center mt-5\">\r\n        <div className=\"col-md-5 mt-5\">\r\n          {success.length > 0 && <Success msg={success}></Success>}\r\n          <div className=\"bs\">\r\n            <h2>Register</h2>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"name\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"email\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"password\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"confirm password\"\r\n              value={cpassword}\r\n              onChange={(e) => {\r\n                setCpassword(e.target.value);\r\n              }}\r\n            />\r\n            {loading ? (\r\n              <div>Registering... Please Wait...</div>\r\n            ) : (\r\n              <button className=\"btn btn-primary mt-3\" onClick={register}>\r\n                Register\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\ProfileScreen.js",["102","103"],"import React, { useState, useEffect } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport { Tag } from \"antd\";\r\n\r\nimport MyBookingScreen from \"./MyBookingScreen\";\r\nconst { TabPane } = Tabs;\r\n\r\nfunction ProfileScreen() {\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      window.location.href = \"/login\";\r\n    }\r\n  }, []);\r\n\r\n  function callback(key) {\r\n    console.log(key);\r\n  }\r\n\r\n  return (\r\n    <div className=\"ml-3 mt-3\">\r\n      <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n        <TabPane tab=\"Profile\" key=\"1\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12 ml-5 mb-5\">\r\n              <div className=\"bs\">\r\n                <p>My Profile</p>\r\n                <p>Name : {user.name}</p>\r\n                <p>Email : {user.email}</p>\r\n                <p>\r\n                  IsAdmin :{\" \"}\r\n                  {user.isAdmin ? (\r\n                    <Tag color=\"green\">YES</Tag>\r\n                  ) : (\r\n                    <Tag color=\"red\">NO</Tag>\r\n                  )}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"Booking\" key=\"2\">\r\n          <MyBookingScreen></MyBookingScreen>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\LoginScreen.js",["104","105","106","107"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\nimport Success from \"../components/Success\";\r\n\r\nfunction LoginScreen() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  async function Login() {\r\n    setLoading(true);\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n    //console.log(user);\r\n    try {\r\n      const result = (await axios.post(\"/api/users/login\", user)).data;\r\n      console.log(result);\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(result));\r\n      window.location.href = \"/home\";\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(\"Invalid Credentials\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <div>\r\n      {loading && <Loader></Loader>}\r\n\r\n      <div className=\"row justify-content-center mt-5\">\r\n        <div className=\"col-md-5 mt-5\">\r\n          {error.length > 0 && <Error msg={error}></Error>}\r\n          <div className=\"bs\">\r\n            <h2>Login</h2>\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"email\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"password\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n            {loading ? (\r\n              <div>Login...Please Wait...</div>\r\n            ) : (\r\n              <button className=\"btn btn-primary mt-3\" onClick={Login}>\r\n                Login\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\Bookingscreen.js",["108","109","110","111"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport Swal from \"sweetalert2\";\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\n\r\nfunction Bookingscreen({ match }) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [room, setRoom] = useState({});\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [totalDays, setTotalDays] = useState(0);\r\n\r\n  const roomid = match.params.roomid;\r\n  const fromdate = moment(match.params.fromdate, \"DD-MM-YYYY\");\r\n  const todate = moment(match.params.todate, \"DD-MM-YYYY\");\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    if (!user) {\r\n      window.location.href = \"/login\";\r\n    }\r\n    async function fetchMyAPI() {\r\n      try {\r\n        setError(\"\");\r\n        setLoading(true);\r\n        const data = (\r\n          await axios.post(\"/api/rooms/getroombyid\", {\r\n            roomid: match.params.roomid,\r\n          })\r\n        ).data;\r\n        //console.log(data);\r\n        setRoom(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setError(error);\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const totaldays = moment.duration(todate.diff(fromdate)).asDays() + 1;\r\n    setTotalDays(totaldays);\r\n    setTotalAmount(totalDays * room.rentperday);\r\n  }, [room]);\r\n\r\n  const onToken = async (token) => {\r\n    console.log(token);\r\n    const bookingDetails = {\r\n      room,\r\n      userid: JSON.parse(localStorage.getItem(\"currentUser\"))._id,\r\n      fromdate,\r\n      todate,\r\n      totalAmount,\r\n      totaldays: totalDays,\r\n      token,\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n      const result = await axios.post(\"/api/bookings/bookroom\", bookingDetails);\r\n      setLoading(false);\r\n      Swal.fire(\r\n        \"Congratulations\",\r\n        \"Your Room Booked Successfully\",\r\n        \"success\"\r\n      ).then((result) => {\r\n        window.location.href = \"/home\";\r\n      });\r\n    } catch (error) {\r\n      setError(error);\r\n      Swal.fire(\"Opps\", \"Error:\" + error, \"error\");\r\n    }\r\n    setLoading(false);\r\n    //TESTING CARD\r\n    //https://stripe.com/docs/testing\r\n    //https://www.npmjs.com/package/react-stripe-checkout\r\n    // fetch(\"/save-stripe-token\", {\r\n    //   method: \"POST\",\r\n    //   body: JSON.stringify(token),\r\n    // }).then((response) => {\r\n    //   response.json().then((data) => {\r\n    //     alert(`We are in business, ${data.email}`);\r\n    //   });\r\n    // });\r\n  };\r\n\r\n  return (\r\n    <div className=\"m-5\">\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error.length > 0 ? (\r\n        <Error msg={error}></Error>\r\n      ) : (\r\n        <div className=\"row justify-content-center mt-5 bs\">\r\n          <div className=\"col-md-6\">\r\n            <h1>{room.name}</h1>\r\n            <img src={room.imageurls[0]} alt=\"\" className=\"bigimg\" />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <h1>Booking Details</h1>\r\n              <hr />\r\n              <b>\r\n                <p>\r\n                  Name : {JSON.parse(localStorage.getItem(\"currentUser\")).name}\r\n                </p>\r\n                <p>From Date : {match.params.fromdate}</p>\r\n                <p>To Date : {match.params.todate}</p>\r\n                <p>Max Count : {room.maxcount}</p>\r\n              </b>\r\n            </div>\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <h1>Amount</h1>\r\n              <hr />\r\n              <b>\r\n                <p>Total Days : {totalDays}</p>\r\n                <p>Rent per day : {room.rentperday}</p>\r\n                <p>Total Amount : {totalAmount}</p>\r\n              </b>\r\n            </div>\r\n\r\n            <div style={{ float: \"right\" }}>\r\n              <StripeCheckout\r\n                amount={totalAmount * 100}\r\n                currency=\"USD\"\r\n                token={onToken}\r\n                stripeKey=\"pk_test_51NTc1GHHhm5m620pVxETfabwHyi4DngB2xJ7gj2fdkhPyOHQccOclWfAgno4cMcw3uBoJD1JjPtXBlpaikXG6FHv00H3r5Ljti\"\r\n              >\r\n                <button className=\"btn btn-primary\">Pay Now</button>\r\n              </StripeCheckout>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bookingscreen;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\Homescreen.js",["112","113","114","115"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"antd/dist/antd.css\";\r\nimport { DatePicker, Space } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport Room from \"../components/Room\";\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\n\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\"; // You can also use <link> for styles\r\n// ..\r\nAOS.init({\r\n  duration: 1000,\r\n});\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction Homescreen() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [rooms, setRooms] = useState([]);\r\n\r\n  const [fromDate, setFromDate] = useState();\r\n  const [toDate, setToDate] = useState();\r\n  const [duplicateRooms, setDuplicateRooms] = useState([]);\r\n  const [searchKey, setSearchKey] = useState(\"\");\r\n  const [type, setType] = useState(\"all\");\r\n\r\n  useEffect(() => {\r\n    async function fetchMyAPI() {\r\n      try {\r\n        setError(\"\");\r\n        setLoading(true);\r\n        const data = (await axios.get(\"/api/rooms/getallrooms\")).data;\r\n        //console.log(data);\r\n        setRooms(data);\r\n        setDuplicateRooms(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setError(error);\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  function filterByDate(dates) {\r\n    // console.log(moment(dates[0]).format(\"DD-MM-YYYY\"));\r\n    // console.log(moment(dates[1]).format(\"DD-MM-YYYY\"));\r\n    try {\r\n      setFromDate(moment(dates[0]).format(\"DD-MM-YYYY\"));\r\n      setToDate(moment(dates[1]).format(\"DD-MM-YYYY\"));\r\n\r\n      var tempRooms = [];\r\n      for (const room of duplicateRooms) {\r\n        var availability = false;\r\n        if (room.currentbookings.length > 0) {\r\n          for (const booking of room.currentbookings) {\r\n            if (\r\n              !moment(moment(dates[0]).format(\"DD-MM-YYYY\")).isBetween(\r\n                booking.fromdate,\r\n                booking.todate\r\n              ) &&\r\n              !moment(moment(dates[1]).format(\"DD-MM-YYYY\")).isBetween(\r\n                booking.fromdate,\r\n                booking.todate\r\n              )\r\n            ) {\r\n              if (\r\n                moment(dates[0]).format(\"DD-MM-YYYY\") !== booking.fromdate &&\r\n                moment(dates[0]).format(\"DD-MM-YYYY\") !== booking.todate &&\r\n                moment(dates[1]).format(\"DD-MM-YYYY\") !== booking.fromdate &&\r\n                moment(dates[1]).format(\"DD-MM-YYYY\") !== booking.todate\r\n              ) {\r\n                availability = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        //\r\n        if (availability == true || room.currentbookings.length == 0) {\r\n          tempRooms.push(room);\r\n        }\r\n      }\r\n      setRooms(tempRooms);\r\n    } catch (error) {}\r\n  }\r\n\r\n  function filterBySearch() {\r\n    const tempRooms = duplicateRooms.filter((x) =>\r\n      x.name.toLowerCase().includes(searchKey.toLowerCase())\r\n    );\r\n    setRooms(tempRooms);\r\n  }\r\n  function filterByType(type) {\r\n    setType(type);\r\n    console.log(type);\r\n    if (type !== \"all\") {\r\n      const tempRooms = duplicateRooms.filter(\r\n        (x) => x.type.toLowerCase() == type.toLowerCase()\r\n      );\r\n      setRooms(tempRooms);\r\n    } else {\r\n      setRooms(duplicateRooms);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-5 bs\">\r\n        <div className=\"col-md-3\">\r\n          <RangePicker format=\"DD-MM-YYYY\" onChange={filterByDate} />\r\n        </div>\r\n\r\n        <div className=\"col-md-5\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"search rooms\"\r\n            value={searchKey}\r\n            onChange={(e) => {\r\n              setSearchKey(e.target.value);\r\n            }}\r\n            onKeyUp={filterBySearch}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <select\r\n            className=\"form-control\"\r\n            value={type}\r\n            onChange={(e) => {\r\n              filterByType(e.target.value);\r\n            }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            <option value=\"delux\">Delux</option>\r\n            <option value=\"non-delux\">Non-Delux</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row justify-content-center mt-5\">\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error.length > 0 ? (\r\n          <Error msg={error}></Error>\r\n        ) : (\r\n          rooms.map((x) => {\r\n            return (\r\n              <div className=\"col-md-9 mt-3\" data-aos=\"flip-down\">\r\n                <Room room={x} fromDate={fromDate} toDate={toDate} />\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homescreen;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\AdminScreen.js",["116","117","118"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Tabs } from \"antd\";\r\nimport AdminBookingScreen from \"./AdminBookingScreen\";\r\nimport AdminRoomScreen from \"./AdminRoomScreen\";\r\nimport AdminUserScreen from \"./AdminUserScreen\";\r\nimport AdminAddRoomScreen from \"./AdminAddRoomScreen\";\r\nconst { TabPane } = Tabs;\r\nfunction callback(key) {\r\n  console.log(key);\r\n}\r\nfunction AdminScreen() {\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  useEffect(() => {\r\n    if (!user || user.isAdmin == false) {\r\n      window.location.href = \"/home\";\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ml-3 mt-3 mr-3 bs\">\r\n      <h1 className=\"text-center\">Admin Panel</h1>\r\n      <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n        <TabPane tab=\"Bookings\" key=\"1\">\r\n          <AdminBookingScreen></AdminBookingScreen>\r\n        </TabPane>\r\n        <TabPane tab=\"Rooms\" key=\"2\">\r\n          <AdminRoomScreen></AdminRoomScreen>\r\n        </TabPane>\r\n        <TabPane tab=\"Add Room\" key=\"3\">\r\n          <AdminAddRoomScreen></AdminAddRoomScreen>\r\n        </TabPane>\r\n        <TabPane tab=\"Users\" key=\"4\">\r\n          <AdminUserScreen></AdminUserScreen>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminScreen;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\LandingScreen.js",["119","120"],"import React from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\"; // You can also use <link> for styles\r\n// ..\r\nAOS.init({\r\n  duration: 2000,\r\n});\r\n\r\nfunction LandingScreen() {\r\n  return (\r\n    <div className=\"row landing\">\r\n      <div className=\"col-md-12 text-center\">\r\n        <h2 data-aos=\"zoom-in\" style={{ color: \"white\", fontSize: \"100px\" }}>\r\n          MERN HOTEL BOOKING\r\n        </h2>\r\n        <h1 data-aos=\"zoom-out\" style={{ color: \"white\" }}>\r\n          There is only one boss. The Guest.\r\n        </h1>\r\n        <Link to=\"/home\">\r\n          <button className=\"btn btn-primary landingBtn\">Get Started</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingScreen;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\components\\Error.js",[],"C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\components\\Loader.js",["121","122","123"],"import React, { useState } from \"react\";\r\nimport PropagateLoader from \"react-spinners/PacmanLoader\";\r\n\r\nfunction Loader() {\r\n  let [loading, setLoading] = useState(true);\r\n  let [color, setColor] = useState(\"#ffffff\");\r\n\r\n  return (\r\n    <div style={{ marginTop: \"150px\" }}>\r\n      <div className=\"sweet-loading text-center\">\r\n        <PropagateLoader color=\"#000\" loading={loading} css=\"\" size={25} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\components\\Success.js",[],"C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\MyBookingScreen.js",["124","125"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Tag } from \"antd\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\n\r\nfunction MyBookingScreen() {\r\n  const [bookings, setBookings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  async function fetchMyAPI() {\r\n    setError(\"\");\r\n    setLoading(true);\r\n    try {\r\n      const data = (\r\n        await axios.post(\"/api/bookings/getbookingbyuserid\", {\r\n          userid: user._id,\r\n        })\r\n      ).data;\r\n      setBookings(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(error);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  async function cancelBooking(bookingid, roomid) {\r\n    setError(\"\");\r\n    setLoading(true);\r\n    try {\r\n      const data = (\r\n        await axios.post(\"/api/bookings/cancelbooking\", {\r\n          bookingid,\r\n          roomid,\r\n        })\r\n      ).data;\r\n      setLoading(false);\r\n      Swal.fire(\r\n        \"Congratulations\",\r\n        \"Your Room Cancelled Successfully\",\r\n        \"success\"\r\n      ).then((result) => {\r\n        fetchMyAPI();\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      //setError(error);\r\n      Swal.fire(\"Opps\", \"Error:\" + error, \"error\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error.length > 0 ? (\r\n        <Error msg={error}></Error>\r\n      ) : (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6  ml-5\">\r\n            {bookings &&\r\n              bookings.map((booking) => {\r\n                return (\r\n                  <div className=\"bs\">\r\n                    <h1>{booking.room}</h1>\r\n                    <p>\r\n                      <b>BookingId:</b> {booking._id}\r\n                    </p>\r\n                    <p>\r\n                      <b>CheckIn:</b> {booking.fromdate}\r\n                    </p>\r\n                    <p>\r\n                      <b>CheckOut:</b> {booking.todate}\r\n                    </p>\r\n                    <p>\r\n                      <b>Amount:</b> {booking.totalamount}\r\n                    </p>\r\n                    <p>\r\n                      <b>Status:</b>{\" \"}\r\n                      {booking.status === \"booked\" ? (\r\n                        <Tag color=\"green\">CONFIRMED</Tag>\r\n                      ) : (\r\n                        <Tag color=\"red\">CANCELLED</Tag>\r\n                      )}\r\n                    </p>\r\n                    {booking.status === \"booked\" && (\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-danger\"\r\n                          onClick={() => {\r\n                            cancelBooking(booking._id, booking.roomid);\r\n                          }}\r\n                        >\r\n                          Cancel Booking\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyBookingScreen;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\components\\Room.js",["126","127","128"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Carousel } from \"react-bootstrap\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n\r\nfunction Room({ room, fromDate, toDate }) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <div className=\"row bs\">\r\n      <div className=\"col-md-4\">\r\n        <img src={room.imageurls[0]} className=\"smallimg\" alt=\"\" />\r\n      </div>\r\n      <div className=\"col-md-7\">\r\n        <h1>{room.name}</h1>\r\n        <b>\r\n          <p>Max Count : {room.maxcount}</p>\r\n          <p>Phone Number : {room.phonenumber}</p>\r\n          <p>Type : {room.type}</p>\r\n        </b>\r\n\r\n        <div style={{ float: \"right\" }}>\r\n          {fromDate && toDate && (\r\n            <Link to={`/book/${room._id}/${fromDate}/${toDate}`}>\r\n              <button className=\"btn btn-primary m-2\">Book Now</button>\r\n            </Link>\r\n          )}\r\n\r\n          <button className=\"btn btn-primary\" onClick={handleShow}>\r\n            View Detail\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose} size=\"lg\">\r\n        <Modal.Header>\r\n          <Modal.Title>{room.name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Carousel prevLabel=\"\" nextLabel=\"\">\r\n            {room.imageurls.map((url) => {\r\n              return (\r\n                <Carousel.Item>\r\n                  <img\r\n                    className=\"d-block w-100 bigimg\"\r\n                    src={url}\r\n                    alt=\"First slide\"\r\n                  />\r\n                </Carousel.Item>\r\n              );\r\n            })}\r\n          </Carousel>\r\n          <p>{room.description}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\AdminBookingScreen.js",["129"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space } from \"antd\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\n\r\nfunction AdminBookingScreen() {\r\n  const [bookings, setBookings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const columns = [\r\n    {\r\n      title: \"transactionid\",\r\n      dataIndex: \"transactionid\",\r\n      key: \"transactionid\",\r\n    },\r\n    { title: \"roomid\", dataIndex: \"roomid\", key: \"roomid\" },\r\n    { title: \"room\", dataIndex: \"room\", key: \"room\" },\r\n    { title: \"fromdate\", dataIndex: \"fromdate\", key: \"fromdate\" },\r\n    { title: \"todate\", dataIndex: \"todate\", key: \"todate\" },\r\n    {\r\n      title: \"status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      render: (status) => (\r\n        <>\r\n          {status === \"booked\" ? (\r\n            <Tag color=\"green\">CONFIRMED</Tag>\r\n          ) : (\r\n            <Tag color=\"red\">CANCELLED</Tag>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  async function fetchMyData() {\r\n    setError(\"\");\r\n    setLoading(true);\r\n    try {\r\n      const data = (await axios.post(\"/api/bookings/getallbookings\")).data;\r\n      setBookings(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(error);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMyData();\r\n  }, []);\r\n  return (\r\n    <div className=\"row\">\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error.length > 0 ? (\r\n        <Error msg={error}></Error>\r\n      ) : (\r\n        <div className=\"col-md-12\">\r\n          <Table columns={columns} dataSource={bookings} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminBookingScreen;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\AdminUserScreen.js",["130"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space } from \"antd\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\n\r\nfunction AdminUserScreen() {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const columns = [\r\n    { title: \"userid\", dataIndex: \"_id\", key: \"_id\" },\r\n    {\r\n      title: \"name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    { title: \"email\", dataIndex: \"email\", key: \"email\" },\r\n\r\n    {\r\n      title: \"isAdmin\",\r\n      dataIndex: \"isAdmin\",\r\n      key: \"isAdmin\",\r\n      render: (isAdmin) => (\r\n        <>\r\n          {isAdmin === true ? (\r\n            <Tag color=\"green\">YES</Tag>\r\n          ) : (\r\n            <Tag color=\"red\">NO</Tag>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  async function fetchMyData() {\r\n    setError(\"\");\r\n    setLoading(true);\r\n    try {\r\n      const data = (await axios.post(\"/api/users/getallusers\")).data;\r\n      setUsers(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(error);\r\n    }\r\n    setLoading(false);\r\n  }\r\n  useEffect(() => {\r\n    fetchMyData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error.length > 0 ? (\r\n        <Error msg={error}></Error>\r\n      ) : (\r\n        <div className=\"col-md-12\">\r\n          <Table columns={columns} dataSource={users} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminUserScreen;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\AdminAddRoomScreen.js",["131","132","133","134"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Input, InputNumber, Button, Select } from \"antd\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\nconst layout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\nfunction AdminAddRoomScreen() {\r\n  const { Option } = Select;\r\n\r\n  const [room, setRoom] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(values);\r\n    setError(\"\");\r\n    setLoading(true);\r\n    try {\r\n      const data = (await axios.post(\"/api/rooms/addroom\", values)).data;\r\n      Swal.fire(\"Congratulations\", \"Your Room Added Successfully\", \"success\");\r\n      form.resetFields();\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(error);\r\n      Swal.fire(\"Opps\", \"Error:\" + error, \"error\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error.length > 0 ? (\r\n        <Error msg={error}></Error>\r\n      ) : (\r\n        <div className=\"col-md-12\">\r\n          <Form\r\n            {...layout}\r\n            form={form}\r\n            name=\"control-hooks\"\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"name\"\r\n              label=\"name\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"description\"\r\n              label=\"description\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"maxcount\"\r\n              label=\"maxcount\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber min={1} defaultChecked={1} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"phonenumber\"\r\n              label=\"phonenumber\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"rentperday\"\r\n              label=\"rentperday\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber min={1} defaultChecked={1} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"imageurl1\"\r\n              label=\"imageurl1\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"imageurl2\"\r\n              label=\"imageurl2\"\r\n              rules={[\r\n                {\r\n                  //required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"imageurl3\"\r\n              label=\"imageurl3\"\r\n              rules={[\r\n                {\r\n                  //required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"type\"\r\n              label=\"type\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Select placeholder=\"Select a room type\" allowClear>\r\n                <Option value=\"delux\">Delux</Option>\r\n                <Option value=\"non-delux\">Non-Delux</Option>\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout}>\r\n              <Button type=\"success\" htmlType=\"submit\">\r\n                Add\r\n              </Button>\r\n              <Button type=\"danger\" htmlType=\"button\" onClick={onReset}>\r\n                Reset\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminAddRoomScreen;\r\n","C:\\Users\\Shoobham\\Desktop\\New folder\\MERNHotelBooking\\client\\src\\screens\\AdminRoomScreen.js",["135","136"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space } from \"antd\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\n\r\nfunction AdminRoomScreen() {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const columns = [\r\n    {\r\n      title: \"roomid\",\r\n      dataIndex: \"_id\",\r\n      key: \"_id\",\r\n    },\r\n    {\r\n      title: \"name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    { title: \"maxcount\", dataIndex: \"maxcount\", key: \"maxcount\" },\r\n    { title: \"phonenumber\", dataIndex: \"phonenumber\", key: \"phonenumber\" },\r\n    { title: \"rentperday\", dataIndex: \"rentperday\", key: \"rentperday\" },\r\n    { title: \"type\", dataIndex: \"type\", key: \"type\" },\r\n  ];\r\n\r\n  async function fetchMyData() {\r\n    setError(\"\");\r\n    setLoading(true);\r\n    try {\r\n      const data = (await axios.post(\"/api/rooms/getallrooms\")).data;\r\n      setRooms(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(error);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMyData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error.length > 0 ? (\r\n        <Error msg={error}></Error>\r\n      ) : (\r\n        <>\r\n          <div className=\"col md-12\">\r\n            <button className=\"btn btn-success\" onClick={fetchMyData}>\r\n              Refresh\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <Table columns={columns} dataSource={rooms} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminRoomScreen;\r\n",{"ruleId":"137","severity":1,"message":"138","line":1,"column":32,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"141","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":12},{"ruleId":"142","severity":1,"message":"143","line":32,"column":15,"nodeType":"144","endLine":32,"endColumn":70},{"ruleId":"137","severity":1,"message":"145","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"146","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"148","line":15,"column":6,"nodeType":"149","endLine":15,"endColumn":8,"suggestions":"150"},{"ruleId":"137","severity":1,"message":"145","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"151","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":15},{"ruleId":"137","severity":1,"message":"152","line":14,"column":10,"nodeType":"139","messageId":"140","endLine":14,"endColumn":17},{"ruleId":"137","severity":1,"message":"153","line":14,"column":19,"nodeType":"139","messageId":"140","endLine":14,"endColumn":29},{"ruleId":"137","severity":1,"message":"154","line":16,"column":9,"nodeType":"139","messageId":"140","endLine":16,"endColumn":15},{"ruleId":"147","severity":1,"message":"155","line":44,"column":6,"nodeType":"149","endLine":44,"endColumn":8,"suggestions":"156"},{"ruleId":"147","severity":1,"message":"157","line":50,"column":6,"nodeType":"149","endLine":50,"endColumn":12,"suggestions":"158"},{"ruleId":"137","severity":1,"message":"159","line":66,"column":13,"nodeType":"139","messageId":"140","endLine":66,"endColumn":19},{"ruleId":"137","severity":1,"message":"160","line":4,"column":22,"nodeType":"139","messageId":"140","endLine":4,"endColumn":27},{"ruleId":"161","severity":1,"message":"162","line":84,"column":26,"nodeType":"163","messageId":"164","endLine":84,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":84,"column":65,"nodeType":"163","messageId":"164","endLine":84,"endColumn":67},{"ruleId":"161","severity":1,"message":"162","line":103,"column":37,"nodeType":"163","messageId":"164","endLine":103,"endColumn":39},{"ruleId":"137","severity":1,"message":"146","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":16,"column":31,"nodeType":"163","messageId":"164","endLine":16,"endColumn":33},{"ruleId":"147","severity":1,"message":"148","line":19,"column":6,"nodeType":"149","endLine":19,"endColumn":8,"suggestions":"165"},{"ruleId":"137","severity":1,"message":"166","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":23},{"ruleId":"137","severity":1,"message":"167","line":2,"column":25,"nodeType":"139","messageId":"140","endLine":2,"endColumn":30},{"ruleId":"137","severity":1,"message":"168","line":5,"column":17,"nodeType":"139","messageId":"140","endLine":5,"endColumn":27},{"ruleId":"137","severity":1,"message":"169","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":13},{"ruleId":"137","severity":1,"message":"170","line":6,"column":15,"nodeType":"139","messageId":"140","endLine":6,"endColumn":23},{"ruleId":"147","severity":1,"message":"171","line":35,"column":6,"nodeType":"149","endLine":35,"endColumn":8,"suggestions":"172"},{"ruleId":"137","severity":1,"message":"173","line":41,"column":13,"nodeType":"139","messageId":"140","endLine":41,"endColumn":17},{"ruleId":"137","severity":1,"message":"145","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"166","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":23},{"ruleId":"137","severity":1,"message":"167","line":3,"column":25,"nodeType":"139","messageId":"140","endLine":3,"endColumn":30},{"ruleId":"137","severity":1,"message":"160","line":3,"column":22,"nodeType":"139","messageId":"140","endLine":3,"endColumn":27},{"ruleId":"137","severity":1,"message":"160","line":3,"column":22,"nodeType":"139","messageId":"140","endLine":3,"endColumn":27},{"ruleId":"137","severity":1,"message":"145","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"174","line":26,"column":10,"nodeType":"139","messageId":"140","endLine":26,"endColumn":14},{"ruleId":"137","severity":1,"message":"175","line":26,"column":16,"nodeType":"139","messageId":"140","endLine":26,"endColumn":23},{"ruleId":"137","severity":1,"message":"173","line":37,"column":13,"nodeType":"139","messageId":"140","endLine":37,"endColumn":17},{"ruleId":"137","severity":1,"message":"176","line":3,"column":17,"nodeType":"139","messageId":"140","endLine":3,"endColumn":20},{"ruleId":"137","severity":1,"message":"160","line":3,"column":22,"nodeType":"139","messageId":"140","endLine":3,"endColumn":27},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'Success' is defined but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'roomid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.roomid'. Either include it or remove the dependency array.",["178"],"React Hook useEffect has missing dependencies: 'fromdate', 'todate', and 'totalDays'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTotalAmount' needs the current value of 'totalDays'.",["179"],"'result' is assigned a value but never used.","'Space' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["180"],"'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'setLoading' is assigned a value but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchMyAPI'. Either include it or remove the dependency array.",["181"],"'data' is assigned a value but never used.","'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'Tag' is defined but never used.",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"182","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [user]",{"range":"191","text":"192"},"Update the dependencies array to be: [match.params.roomid]",{"range":"193","text":"194"},"Update the dependencies array to be: [fromdate, room, todate, totalDays]",{"range":"195","text":"196"},{"range":"197","text":"192"},"Update the dependencies array to be: [fetchMyAPI]",{"range":"198","text":"199"},[379,381],"[user]",[1334,1336],"[match.params.roomid]",[1524,1530],"[fromdate, room, todate, totalDays]",[582,584],[884,886],"[fetchMyAPI]"]